# -*- coding: utf-8 -*-
"""
This code reads the raw tweets from raw_tweets.txt
Creates a file "formatted_tweets.txt", which contains the relevant information
of the tweets, generated by formatting raw_tweets.
"""

from string import ascii_lowercase
from nltk.corpus import words as english_words, stopwords

#Convert everything in the file to lowercase
def convert_to_lowercase(text):
    return text.lower()

#Remove all the excess white-spaces present in the file
def remove_excess_whitespace(text):
    return ' '.join(text.split())

#Remove all non ascii characters (not relevant)
def remove_non_alpha_chars(text):
    alpha_list = list(text)
    
    count = 0
    while count < len(alpha_list):
        if alpha_list[count] not in ascii_lowercase and alpha_list[count] != ' ':
            del alpha_list[count]
        else:
            count += 1
    
    return ''.join(alpha_list)

#Remove all the non english words present in the tweets
def remove_non_english_words(text, english):
    word_list = text.split(' ') 
    
    count = 0
    while count < len(word_list):
        if word_list[count] not in english:
            del word_list[count]
        else:
            count += 1
            
    return ' '.join(word_list)

#Remove all stopwords present (as not required for analysis)
def remove_stopwords(text, stop):
    word_list = text.split(' ')
    
    count = 0
    while count < len(word_list):
        if word_list[count] in stop:
            del word_list[count]
        else:
            count += 1
    
    return ' '.join(word_list)

#Formatting the tweets ie converting to lowercase, removing non_ascii chars and excess whitespaces
def format_syntax(text):
    lower_converted = convert_to_lowercase(text)
    non_aplha_removed = remove_non_alpha_chars(lower_converted)
    syntax_formatted = remove_excess_whitespace(non_aplha_removed)
    return syntax_formatted
    
#Formatting the tweets ie removing non english words and stop-words
def format_semantic(text):
    english = set(w.lower() for w in english_words.words())
    stop = set(w.lower() for w in stopwords.words())
    non_eng_removed = remove_non_english_words(text, english)
    formatted = remove_stopwords(non_eng_removed, stop)
    
    return formatted


if __name__ == '__main__':
    
    filepath = 'raw_tweets.txt'  
    with open('formatted_tweets.txt', 'w') as the_file:
        with open(filepath) as fp:  
            line = fp.readline()
            count = 1
            while line:
                #print("Line {}: {}".format(cnt, line.strip()))
                #print(format_syntax(line))
                #print(format_semantic(line))
                the_file.write(format_semantic(format_syntax(line)))
                the_file.write('\n')
                line = fp.readline()
                count += 1
    
